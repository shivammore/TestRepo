1) First Repeated Character

Given a string S. The task is to find the first repeated character in it. We need to find the character that occurs more than once and whose index of second occurrence is smallest. S contains only lowercase letters.

Input Format

qwertyy

Constraints

0 <= s.length <= 5 * 104
s consists of English letters and spaces.

Output Format

y

Sample Input 0

qwertyy
Sample Output 0

y



#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;


int main() {
    string str;
    cin>>str;
    bool found=false;
    int i=0;
    for(i=0;i<str.size();i++)
    {
        char a= str[i];

        if(a==str[i+1])
        {
            cout<<str[i+1];
            found= true;
        }
        
    }
    if(found != true)
    {
         cout<<"-1";
    }
   
    return 0;
}

**************************************************************************************

2) Missing Number

Given an array of size N-1 such that it only contains distinct integers in the range of 1 to N. Find the missing element.

Input Format

5
1 2 3 5

Constraints

Constraints: 1 ≤ N ≤ 106 1 ≤ A[i] ≤ 106

Output Format

4

Sample Input 0

5
1 2 3 5
Sample Output 0

4

#include <iostream>
#include<bits/stdc++.h>
using namespace std;
int main() {
    int n;
    cin>>n;
    int a=n-1;
    int A[a];
    for(int i=0;i<a;i++){
        cin>>A[i];
    }
sort(A,A+a);


    int k=1;
    for(int i=0;i<a;i++){
        if(A[i]==k){
            k++;
        }
        else{
            cout<<"Missing element = "<<k;
            break;
        }
    }
    return 0;
}


**************************************************************************************

3) Lucky Number in matrix

Given an m x n matrix of distinct numbers, return all lucky numbers in the matrix in any order.
A lucky number is an element of the matrix such that it is the minimum element in its row and maximum in its column.

Input Format

3 3 3 7 8 9 11 13 15 16 17

Constraints

m == mat.length
n == mat[i].length
1 <= n, m <= 50
1 <= matrix[i][j] <= 105.
All elements in the matrix are distinct.

Output Format

15

Sample Input 0

3 3
3 7 8 9 11 13 15 16 17
Sample Output 0

15



#include <iostream>
#include<bits/stdc++.h>
using namespace std;

int main()
{
    int n;
    cin>>n;
    int A[n][n];
    
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            cin>>A[i][j];
        }
    }
   
    for(int i=0;i<n;i++){
        sort(A[i],A[i]+n);
    }
    
    for(int i=0;i<n;i++){
        for(int j=i+1;j<n;j++){
            swap(A[i][j],A[j][i]);
        }
    }
    for(int i=0;i<n;i++){
        sort(A[i],A[i]+n);
    }
    
    for(int i=0;i<n;i++){
        for(int j=i+1;j<n;j++){
            swap(A[i][j],A[j][i]);
        }
    }
    cout<<A[n-1][0];
    
    return 0;
}

**************************************************************************************

4) Set Matrix Zero	

Given a matrix if an element in the matrix is 0 then you will have to set its entire column and row to 0 and then return the matrix.

Examples:

Examples 1:

Input: matrix=[[1,1,1],[1,0,1],[1,1,1]]

Output: [[1,0,1],[0,0,0],[1,0,1]]

Explanation: Since matrix[2][2]=0.Therfore the 2nd column and 2nd row wil be set to 0.



#include <iostream>

using namespace std;

int main()
{
    int n,x,y,flag=0;;
    cin>>n;
    int A[n][n];
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            cin>>A[i][j];
        }
    }
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            if(A[i][j]==0){
                if(flag==0){
                for(int p=0;p<n;p++){
                    for(int q=0;q<n;q++){
                        
                            y=j;
                            x=i;
                            flag=1;
                            A[p][y]=0;
                            A[x][q]=0;
                    }
                    
                }}
            }
        }
        
    }
    cout<<endl;
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            cout<<A[i][j]<<" ";
        }
        cout<<endl;
    }

    return 0;
}

**************************************************************************************

5) Pyramid Number

        1
     222
    33333
   4444444
  555555555
 66666666666
7777777777777

#include <iostream>

using namespace std;

int main()
{
    int n;
    cin>>n;
    int k=1;
    for(int i=0;i<n;i++){
        for(int j=1;j<n-i;j++){
            cout<<" ";
        }
        for(int j=0;j<2*i+1;j++){
            cout<<k;
        }
        k++;
        cout<<endl;
    }


    return 0;
}

**************************************************************************************

6) FizzBuzz Program

Write a program that prints the numbers from 1 to 100 and 
for multiples of ‘3’ print “Fizz” 
for the multiples of ‘5’ print “Buzz”
for the multiples of ‘3’ and '5' print “FizzBuzz”
All numbers and strings are in double quote ans separated by comma except last number

Input : 15
Output: "1","2","Fizz","4","Buzz","Fizz","7","8","Fizz","Buzz","11","Fizz","13","14","FizzBuzz"

#include <iostream>

using namespace std;

int main()
{
    int n;
    cin>>n;
    for(int i=1;i<=n;i++){
        if(i==n && i%3!=0 && i%5!=0){
            cout<<'"'<<i<<'"';
            
        }
        else if(i==n && i%3==0 && i%5==0){
            cout<<'"'<<"FizzBuzz"<<'"';
            
        }
        else if(i==n && i%3==0){
            cout<<'"'<<"Fizz"<<'"';
        }
        else if(i==n && i%5==0){
            cout<<'"'<<"Buzz"<<'"';
        }
        else if(i%3==0 && i%5==0){
            cout<<'"'<<"FizzBuzz"<<'"'<<",";
        }
        else if(i%3==0){
            cout<<'"'<<"Fizz"<<'"'<<",";
        }
        else if(i%5==0){
            cout<<'"'<<"Buzz"<<'"'<<",";
        }
        
        else{
            cout<<'"'<<i<<'"'<<",";
        }
    }

    return 0;
}

**************************************************************************************

7) Character Count

Input: This is demo file
Output:  	T is repeated 1 times
	h is repeated 1 times
	i is repeated 3 times
	s is repeated 2 times
	   is repeated 3 times
	d is repeated 1 times
	e is repeated 2 times
	m is repeated 1 times
	o is repeated 1 times
	f is repeated 1 times
	l is repeated 1 times

#include <iostream>

using namespace std;

int main()
{
    string str;
    int count=0;
    getline(cin,str);
    for(int i=0;i<str.length();i++)
    {   
             count=0;
  
        for(int j=0;j<str.length();j++){
            if(j<i && str[i]==str[j])
            {
                break;
            }
            if(str[i]==str[j]){
                count++;
            }

         


        }
    if(count!=0)
    cout<<str[i]<<" is repeated "<<count<<" times"<<endl;

    }

    return 0;
}

**************************************************************************************

8) String Rotate right

#include <algorithm>  
#include <iostream>  
#include <string>  
  
using namespace std;  
  
int main() {  
  string str ;
  cout<<"Enter String: ";
  cin>>str;
  cout<<endl<<"enter number: ";
  int n;
  cin>>n;
  cout << endl<<"Before Rotate : "<< str << endl;  
    
  rotate(str.begin(), str.begin() +str.size()- n, str.end());  
  cout <<"After Rotate  : " << str << endl;  
    
  return 0;  
}  

**************************************************************************************

9) String Rotate left

#include <algorithm>  
#include <iostream>  
#include <string>  
  
using namespace std;  
  
int main() {  
  string str ;
  cout<<"Enter String: ";
  cin>>str;
  cout<<endl<<"enter number: ";
  int n;
  cin>>n;
  cout << endl<<"Before Rotate : "<< str << endl;  
    
  rotate(str.begin(), str.begin() + n, str.end());  
  cout <<"After Rotate  : " << str << endl;  
    
  return 0;  
}  

**************************************************************************************

10) Largest sum of row and column in matrix

#include <iostream>

using namespace std;

int main()
{
    int n;
    cin>>n;
    int A[n][n];
    
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            cin>>A[i][j];
        }
    }
    // 1 2 3 //6
    // 4 5 6 //15
    // 7 8 9 //24
    int sum=0,row=0;
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            sum+=A[i][j];
        }
        if(sum>=row){
            row=sum;
            
        }
        sum=0;
    }
    int sums=0,col=0;
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            sums+=A[j][i];
        }
        if(sums>=col){
            col=sums;
            
        }
        sums=0;
    }
    cout<<endl;
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            cout<<A[i][j]<<" ";
        }
        cout<<endl;
    }
    cout<<endl;
    cout<<"Largest sum of row: "<<row<<endl;
    cout<<"Largest sum of col: "<<col<<endl;
    
    return 0;
}

**************************************************************************************

11)  numbers

intput : 6

output: 

6 6 6 6 6 6 
5 5 5 5 5 5 
4 4 4 4 4 4 
3 3 3 3 3 3 
2 2 2 2 2 2 
1 1 1 1 1 1 

5 5 5 5 5 
4 4 4 4 4 
3 3 3 3 3 
2 2 2 2 2 
1 1 1 1 1 

4 4 4 4 
3 3 3 3 
2 2 2 2 
1 1 1 1 

3 3 3 
2 2 2 
1 1 1 

2 2 
1 1 

1 


#include <iostream>

using namespace std;

int main()
{
    int n;
    cin>>n;
    
    for(int i=n;i>0;i--){
        for(int j=i;j>0;j--){
            for(int k=i;k>0;k--){
                cout<<j<<" ";
            }
            cout<<endl;
        }
        cout<<endl;
    }

    return 0;
}


**************************************************************************************
12) Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.

Input: nums = [2,7,11,15], target = 9
Output: [0,1]
Explanation: Because nums[0] + nums[1] == 9, we return [0, 1].

#include <iostream>

using namespace std;

int main()
{
    int n;
    cin>>n;
    int target;
    cin>>target;
    int A[n];
    for(int i=0;i<n;i++){
        cin>>A[i];
    }
    for(int k=0;k<n;k++){
    for(int i=1;i<n;i++){
        if(A[k]+A[i]==target && k<i){
            cout<<"["<<k<<","<<i<<"]";
            
        }
    }
    
    }

    return 0;
}

**************************************************************************************

13) Search an element in a matrix

#include <iostream>

using namespace std;

int main()
{
    int n;
    cout<<"Enter the size of matrix (example:3) : ";
    cin>>n;
    cout<<endl;
    cout<<"Enter the elements : ";
    int A[n][n];
    
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            cin>>A[i][j];
        }
        
    }
    cout<<endl;
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            cout<<A[i][j]<<" ";
        }
        cout<<endl;
    }
    cout<<endl;
    int m;
    cout<<"Eneter element you want to search : ";
    cin>>m;
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            if(A[i][j]==m){
                cout<<endl<<"element found at position ("<<i<<","<<j<<")";
            }
        }
    }
    return 0;
}
**************************************************************************************
14) Find Row with Maximum Number of 1’s


#include <iostream>
#include<bits/stdc++.h>
using namespace std;

int main()
{
    int n,l;
    
    cin>>n;
    int count=0,k=0;
    int A[n][n];
    
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            cin>>A[i][j];
        }
        
    }
    cout<<endl;
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            cout<<A[i][j]<<" ";
        }
        cout<<endl;
    }
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            if(A[i][j]==1){
                count++;
            }
        }
        if(count>k){
            k=count;
            l=i;
        }
        count=0;
    }
    cout<<endl<<"Index of row with maximum 1's is "<<l;
    return 0;
}
**************************************************************************************
